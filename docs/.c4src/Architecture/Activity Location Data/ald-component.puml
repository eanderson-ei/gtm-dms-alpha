@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

!define ICONURL https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v2.4.0
!include ICONURL/material/border_all.puml
!include ICONURL/material/folder.puml
!include ICONURL/material/description.puml
!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!include DEVICONS/postgresql.puml
!include DEVICONS/google_drive.puml
!include DEVICONS/database.puml
' !include DEVICONS2/google.puml
!define DEVICONS2 https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons2
!include DEVICONS2/javascript.puml

HIDE_STEREOTYPE()
SET_SKETCH_STYLE($bgColor="white", $footerWarning="Draft", $footerText="Created for discussion")
LAYOUT_AS_SKETCH()
LAYOUT_LEFT_RIGHT()
UpdateElementStyle("", $shadowing="true")

title: "Activity Location Data Diagram"

AddElementTag("tool", $shape=EightSidedShape(), $legendText="tool (eight sided)")
AddRelTag("old", $textColor=$ARROW_COLOR, $lineColor=$ARROW_COLOR, $lineStyle=DashedLine())

System_Boundary(activityFolder, "Activity Folder"){
    Component(aldTracker, "Activity Location Tracker", "Google Sheets", "Report Activity Location Data", $sprite="border_all")
    ' Component(activityMELP, "Activity MECLA Plan & DMP", "Google Doc", "Activity MECLA and Data Management Plan", $sprite="description")
}

' System_Boundary(activityFolderB, "Activity B Folder"){
'     Component(aldTrackerB, "Activity Location Data Tracker", "Google Sheets", "Report Activity Location Data", $sprite="border_all")
'     ' Component(activityMELP, "Activity MECLA Plan & DMP", "Google Doc", "Activity MECLA and Data Management Plan", $sprite="description")
' }

System_Ext(dis, "Development Information Solution (DIS)", "Agency System")

Component(aldCompiler, "Activity Location Compiler ", "Google Sheets", "Compile Activity Location Data", $sprite="border_all")
ContainerDb(postgres, "Mission Database", "PostgreSQL", "Aggregate all data", $sprite="postgresql")
System_Boundary(dataHub, "Data Hub"){
    Component(aldPortal, "ALD Portal - Public", "Google Apps Script", "Share generalized Activity Location Data", $sprite="javascript")
}
' Component(aldPortalInternal, "ALD Portal - Internal", "Google Apps Script", "Share generalized Activity Location Data")

' Rel_Neighbor(activityMELP, aldTracker, "informs")
Rel(aldTracker, aldCompiler, "reads")
Rel(aldTracker, dis, "submits", "Implementing Partner")
BiRel_L(aldCompiler, postgres, "reads/writes", "pipeline")
Rel(aldCompiler, aldPortal, "reads")
' Rel(aldCompiler, aldPortalInternal, "reads")

' Person(ds, "Data Steward")
' Person(ip, "Implementing Partner")
' Person(team, "Technical Teams")
' System_Ext(dis, "DIS")

' Component_Ext(aldTemplate, "Activity Location Template", "Excel", "Standard template for reporting Activity Location Data")
' ContainerDb(postgres, "Mission Database", "PostgreSQL", "Single source of truth for the Mission", $sprite="postgresql")
' Component(teamTracker, "Team-specific Activity Location Tracker", "Google Sheets", "standard template plus optional fields", $sprite="border_all")

' System_Boundary(activityFolder, "Activity Folder"){
'     Component(aldData, "Activity Location Data", "Google Sheets", "Report Activity Location Data", $sprite="border_all")
'     Component(activityMELP, "Activity MECLA Plan & DMP", "Google Doc", "Activity MECLA and Data Management Plan", $sprite="description")
' }

' Component(hex, "ALD Processor", "Google Colab", "Generalize Activity Location Data", $tags="tool")
' System_Boundary(dataHub, "Data Hub"){
'     Component(aldPortal, "ALD Portal", "Google Apps Script", "Share generalized Activity Location Data")
' }

' Rel(ds, dis, "adds Activities")
' Rel_L(ip, aldData, "updates")
' Rel(dis, aldTemplate, "downloads", "Data Steward")
' Rel_Neighbor(aldTemplate, teamTracker, "becomes")
' Rel(teamTracker, aldData, "copy to", "Data Steward")
' Rel_U(team, teamTracker, "informs design of")

' Rel(aldData, postgres, "updates", "Data Steward")
' Rel(activityMELP, aldData, " ")
' Rel(aldData, dis, "submits to", "Data Steward")
' Rel(postgres, hex, "process", "Data Steward")
' Rel(hex, aldPortal, "uploads", "Data Steward")


@enduml